{
  "buildInfo": {
    "rustc": {
      "version": "1.62.0-nightly",
      "commitHash": "4ca19e09d302a4cbde14f9cb1bc109179dc824cd",
      "commitDate": "2022-04-19",
      "channel": "Nightly",
      "short": "rustc 1.62.0-nightly (4ca19e09d 2022-04-19)"
    },
    "contractCrate": {
      "name": "nft-minter",
      "version": "0.0.0",
      "git_version": "0ff3788"
    },
    "framework": {
      "name": "numbat-wasm",
      "version": "0.31.1"
    }
  },
  "name": "NftMinter",
  "constructor": {
    "inputs": [
      {
        "name": "collections_category",
        "type": "bytes"
      },
      {
        "name": "royalties_claim_address",
        "type": "Address"
      },
      {
        "name": "mint_payments_claim_address",
        "type": "Address"
      },
      {
        "name": "max_nfts_per_transaction",
        "type": "u32"
      }
    ],
    "outputs": []
  },
  "endpoints": [
    {
      "name": "setMaxNftsPerTransaction",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "max",
          "type": "u32"
        }
      ],
      "outputs": []
    },
    {
      "name": "getCollectionsCategory",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "bytes"
        }
      ]
    },
    {
      "name": "getMaxNftsPerTransaction",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "getRegisterdCollectionHashes",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<array46<u8>>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "getRegisteredBrands",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<bytes>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "getNftTokenIdForBrand",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "TokenIdentifier"
        }
      ]
    },
    {
      "name": "getPriceForTier",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "tier",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "MintPrice"
        }
      ]
    },
    {
      "name": "getTagsForBrand",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "List<bytes>"
        }
      ]
    },
    {
      "name": "getMintWhitelist",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "variadic<Address>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "addUserToAdminList",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "removeUserFromAdminList",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "issueTokenForBrand",
      "mutability": "mutable",
      "payableInTokens": ["REWA"],
      "inputs": [
        {
          "name": "collection_hash",
          "type": "array46<u8>"
        },
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "media_type",
          "type": "bytes"
        },
        {
          "name": "royalties",
          "type": "BigUint"
        },
        {
          "name": "mint_start_timestamp",
          "type": "u64"
        },
        {
          "name": "mint_end_timestamp",
          "type": "u64"
        },
        {
          "name": "mint_price_token_id",
          "type": "TokenIdentifier"
        },
        {
          "name": "token_display_name",
          "type": "bytes"
        },
        {
          "name": "token_ticker",
          "type": "bytes"
        },
        {
          "name": "whitelist_expire_timestamp",
          "type": "u64"
        },
        {
          "name": "tags",
          "type": "List<bytes>"
        },
        {
          "name": "tier_name_nr_nfts_pairs",
          "type": "variadic<multi<bytes,u32,BigUint>>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "addToWhitelist",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "users",
          "type": "variadic<Address>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "removeFromWhitelist",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "users",
          "type": "variadic<Address>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "setMintWhitelistExpireTimestamp",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "timestamp",
          "type": "u64"
        }
      ],
      "outputs": []
    },
    {
      "name": "buyRandomNft",
      "mutability": "mutable",
      "payableInTokens": ["*"],
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "tier",
          "type": "bytes"
        },
        {
          "name": "opt_nfts_to_buy",
          "type": "optional<u32>",
          "multi_arg": true
        }
      ],
      "outputs": [
        {
          "type": "List<DcdtTokenPayment>"
        }
      ]
    },
    {
      "name": "giveawayNfts",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "tier",
          "type": "bytes"
        },
        {
          "name": "dest_amount_pairs",
          "type": "variadic<multi<Address,u32>>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "getNftTiersForBrand",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "variadic<bytes>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "nftIdOffsetForTier",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "tier",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "setRoyaltiesClaimAddress",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "new_address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "setMintPaymentsClaimAddress",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "new_address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "claimRoyalties",
      "mutability": "mutable",
      "inputs": [],
      "outputs": [
        {
          "type": "BigUint"
        },
        {
          "type": "List<DcdtTokenPayment>"
        }
      ]
    },
    {
      "name": "claimMintPayments",
      "mutability": "mutable",
      "inputs": [],
      "outputs": [
        {
          "type": "BigUint"
        },
        {
          "type": "List<DcdtTokenPayment>"
        }
      ]
    },
    {
      "name": "getRoyaltiesClaimAddress",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "Address"
        }
      ]
    },
    {
      "name": "getMintPaymentsClaimAddress",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "Address"
        }
      ]
    },
    {
      "name": "getAccumulatedRoyalties",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<multi<TokenIdentifier,BigUint>>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "getAccumulatedMintPayments",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<multi<TokenIdentifier,BigUint>>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "claimRoyaltiesFromMarketplace",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "marketplace_address",
          "type": "Address"
        },
        {
          "name": "tokens",
          "type": "variadic<TokenIdentifier>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "getBrandInfo",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "brand_id",
          "type": "bytes"
        }
      ],
      "outputs": [
        {
          "type": "BrandInfoViewResultType"
        }
      ]
    },
    {
      "name": "getAllBrandsInfo",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<BrandInfoViewResultType>",
          "multi_result": true
        }
      ]
    }
  ],
  "hasCallback": true,
  "types": {
    "TimePeriod": {
      "type": "struct",
      "fields": [
        {
          "name": "start",
          "type": "u64"
        },
        {
          "name": "end",
          "type": "u64"
        }
      ]
    },
    "BrandInfo": {
      "type": "struct",
      "fields": [
        {
          "name": "collection_hash",
          "type": "array46<u8>"
        },
        {
          "name": "token_display_name",
          "type": "bytes"
        },
        {
          "name": "media_type",
          "type": "bytes"
        },
        {
          "name": "royalties",
          "type": "BigUint"
        },
        {
          "name": "mint_period",
          "type": "TimePeriod"
        },
        {
          "name": "whitelist_expire_timestamp",
          "type": "u64"
        }
      ]
    },
    "MintPrice": {
      "type": "struct",
      "fields": [
        {
          "name": "token_id",
          "type": "TokenIdentifier"
        },
        {
          "name": "amount",
          "type": "BigUint"
        }
      ]
    },
    "TierInfoEntry": {
      "type": "struct",
      "fields": [
        {
          "name": "tier",
          "type": "bytes"
        },
        {
          "name": "total_nfts",
          "type": "u32"
        },
        {
          "name": "available_nfts",
          "type": "u32"
        },
        {
          "name": "mint_price",
          "type": "MintPrice"
        }
      ]
    },
    "BrandInfoViewResultType": {
      "type": "struct",
      "fields": [
        {
          "name": "brand_id",
          "type": "bytes"
        },
        {
          "name": "nft_token_id",
          "type": "TokenIdentifier"
        },
        {
          "name": "brand_info",
          "type": "BrandInfo"
        },
        {
          "name": "tier_info_entries",
          "type": "List<TierInfoEntry>"
        }
      ]
    },
    "DcdtTokenType": {
      "type": "enum",
      "variants": [
        {
          "name": "Fungible",
          "discriminant": 0
        },
        {
          "name": "NonFungible",
          "discriminant": 1
        },
        {
          "name": "SemiFungible",
          "discriminant": 2
        },
        {
          "name": "Meta",
          "discriminant": 3
        },
        {
          "name": "Invalid",
          "discriminant": 4
        }
      ]
    },
    "DcdtTokenPayment": {
      "type": "struct",
      "fields": [
        {
          "name": "token_type",
          "type": "DcdtTokenType"
        },
        {
          "name": "token_identifier",
          "type": "TokenIdentifier"
        },
        {
          "name": "token_nonce",
          "type": "u64"
        },
        {
          "name": "amount",
          "type": "BigUint"
        }
      ]
    }
  }
}
