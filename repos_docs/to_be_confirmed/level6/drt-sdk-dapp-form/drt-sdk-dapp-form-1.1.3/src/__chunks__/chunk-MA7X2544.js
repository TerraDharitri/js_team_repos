import{c as B}from"./chunk-EHDIKWFQ.js";import{c as E}from"./chunk-CVZLP3HR.js";import{c as k}from"./chunk-DRZU3YBL.js";import{c as T}from"./chunk-W22JQH3P.js";import{a as x}from"./chunk-5I5B5RVZ.js";import{a as g}from"./chunk-BES6TWAC.js";import{a as b,b as m}from"./chunk-WBL2C6TH.js";import{c as p}from"./chunk-LQFLWU3Q.js";import{a as d}from"./chunk-7FL7QWGO.js";import{h as n}from"./chunk-VMXC44RX.js";import{i as A}from"./chunk-SVQK3TVL.js";A();import{DIGITS as l,DECIMALS as P}from"@terradharitri/sdk-dapp/constants/index";import{useFormikContext as w}from"formik";function X(){let{values:M}=w(),{balance:a}=p(),{networkConfig:{chainId:D}}=k(),{nft:t,tokens:v}=B(),{isDcdtTransaction:C,isNftTransaction:y,isRewaTransaction:o}=T(),{gasLimit:G,gasPrice:I}=E(),{tokenId:N}=M,s=null;y&&t&&(s=m({balance:t.balance,decimals:t.type===d.MetaDCDT?t.decimals:0,digits:l}));let c=null;if(C){let{decimals:e,balance:i}=x({tokens:v,tokenId:N});c=m({balance:i,decimals:e,digits:l})}let u=n,r=a;if(a&&o){let{entireBalance:e,entireBalanceMinusDust:i}=b({balance:a,gasPrice:g(I),gasLimit:G,decimals:P,digits:l,chainId:D});u=e,r=i}let f=o?u:t&&s?s:c;return{maxAmountAvailable:f||n,maxAmountMinusDust:(o?r:f)||n}}export{X as a};
//# sourceMappingURL=chunk-MA7X2544.js.map
