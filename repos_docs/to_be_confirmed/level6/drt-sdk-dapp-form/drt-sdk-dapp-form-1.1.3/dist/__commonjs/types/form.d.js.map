{
  "version": 3,
  "sources": ["../../../src/__commonjs/types/form.d.ts"],
  "sourcesContent": ["import { Transaction } from '@terradharitri/sdk-core/out';\nimport { TransactionTypeEnum } from 'types/enums';\nimport { PartialNftType, PartialTokenType } from 'types/tokens';\nexport declare enum ValuesEnum {\n    receiver = \"receiver\",\n    gasPrice = \"gasPrice\",\n    data = \"data\",\n    tokenId = \"tokenId\",\n    amount = \"amount\",\n    gasLimit = \"gasLimit\",\n    receiverUsername = \"receiverUsername\",\n    rawReceiverUsername = \"rawReceiverUsername\",\n    senderUsername = \"senderUsername\"\n}\nexport type ValueKeyType = keyof typeof ValuesEnum;\ntype MandatoryValuesType = {\n    [key in ValueKeyType]: string;\n};\nexport interface ValuesType extends Omit<MandatoryValuesType, 'receiverUsername' | 'senderUsername' | 'rawReceiverUsername'> {\n    receiverUsername?: string;\n    rawReceiverUsername?: string;\n    senderUsername?: string;\n}\nexport interface ExtendedValuesType extends ValuesType {\n    address: string;\n    balance: string;\n    chainId: string;\n    hiddenFields?: Array<ValueKeyType>;\n    ignoreTokenBalance?: boolean;\n    isAdvancedModeEnabled?: boolean;\n    isBurn?: boolean;\n    isGuarded?: boolean;\n    ledger?: {\n        ledgerDataActive: boolean;\n        version: string;\n    };\n    nft?: PartialNftType;\n    /**\n     * **readonly**: Configure disabled fields by disabling all or individual fields.\\\n     * Example: `readonly: [ 'amount' ]` will disable only the amount field.\n     */\n    readonly?: boolean | Array<ValueKeyType>;\n    tokens?: PartialTokenType[] | null;\n    transaction?: Transaction;\n    txType: TransactionTypeEnum;\n    uiOptions?: {\n        showAmountSlider: boolean;\n    };\n}\nexport interface ValidationSchemaType {\n    txType: TransactionTypeEnum;\n    address: string;\n    rewaLabel: string;\n    balance: string;\n    chainId: string;\n    /**\n     * **ignoreTokenBalance**: Gets set automaticaly in case of validating multiple\\\n     * sign transactions, when some tokens will be available only after execution.\n     */\n    ignoreTokenBalance?: boolean;\n    readonly?: ExtendedValuesType['readonly'];\n    tokenId: string;\n    nft?: PartialNftType;\n    tokens?: PartialTokenType[];\n    ledger?: {\n        ledgerDataActive: boolean;\n        version: string;\n    };\n}\nexport interface FormConfigType {\n    receiver: string;\n    receiverUsername?: string;\n    amount: string;\n    tokenId?: string;\n    gasLimit: string;\n    gasPrice: string;\n    data: string;\n    readonly?: ExtendedValuesType['readonly'];\n    successTitle?: string;\n    successDescription?: string;\n    redirectRoute?: string;\n    skipToConfirm?: boolean;\n}\nexport {};\n//# sourceMappingURL=form.d.ts.map"],
  "mappings": "oEAAA",
  "names": []
}
