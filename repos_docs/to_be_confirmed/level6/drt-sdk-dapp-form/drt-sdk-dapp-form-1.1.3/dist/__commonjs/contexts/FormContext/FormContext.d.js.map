{
  "version": 3,
  "sources": ["../../../../src/__commonjs/contexts/FormContext/FormContext.d.ts"],
  "sourcesContent": ["import React, { Dispatch, SetStateAction, MouseEvent } from 'react';\nimport { Transaction } from '@terradharitri/sdk-core/out';\nimport { ExtendedValuesType, PartialNftType, TransactionTypeEnum } from 'types';\nexport interface FormContextBasePropsType {\n    hasGuardianScreen: boolean;\n    hiddenFields?: ExtendedValuesType['hiddenFields'];\n    isBurn?: boolean;\n    isFormSubmitted: boolean;\n    onCloseForm: () => void;\n    prefilledForm: boolean;\n    readonly?: ExtendedValuesType['readonly'];\n    setGuardedTransaction: (transaction: Transaction) => void;\n    setHasGuardianScreen: Dispatch<SetStateAction<boolean>>;\n    setIsFormSubmitted: Dispatch<SetStateAction<boolean>>;\n    skipToConfirm?: boolean;\n    uiOptions?: ExtendedValuesType['uiOptions'];\n}\nexport interface FormContextPropsType extends FormContextBasePropsType {\n    isRewaTransaction: boolean;\n    isDcdtTransaction: boolean;\n    isNftTransaction: boolean;\n    areValidatedValuesReady: boolean;\n    shouldValidateForm: boolean;\n    isFormValid: boolean;\n    renderKey: number;\n    txType: TransactionTypeEnum;\n    checkInvalid: (value: keyof ExtendedValuesType) => boolean;\n    onValidateForm: () => void;\n    onInvalidateForm: () => void;\n    onPreviewClick?: (event: MouseEvent, data: PartialNftType) => void;\n    onSubmitForm: () => void;\n    isGuardianScreenVisible: boolean;\n    setIsGuardianScreenVisible: Dispatch<SetStateAction<boolean>>;\n}\ninterface FormContextProviderPropsType {\n    children: any;\n    value: FormContextBasePropsType;\n}\nexport declare const FormContext: React.Context<FormContextPropsType>;\nexport declare function FormContextProvider({ children, value }: FormContextProviderPropsType): React.JSX.Element;\nexport declare function useFormContext(): FormContextPropsType;\nexport {};\n//# sourceMappingURL=FormContext.d.ts.map"],
  "mappings": "uEAAA",
  "names": []
}
